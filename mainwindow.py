# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtWidgets, QtCore
from PyQt5.QtCore import pyqtSlot
from PyQt5.QtWidgets import QApplication, QDialog, QMainWindow
from PyQt5.uic import loadUi
import RPi.GPIO as GPIO


red = 40
green = 38
yellow = 36

GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)
GPIO.setup(red, GPIO.OUT)
GPIO.setwarnings(False)
GPIO.setup(green, GPIO.OUT)
GPIO.setwarnings(False)
GPIO.setup(yellow, GPIO.OUT)

class Ui_MainWindow(object):
                    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.redButton = QtWidgets.QRadioButton(self.centralwidget, clicked = lambda:self.select())
        self.redButton.setGeometry(QtCore.QRect(160, 160, 99, 20))
        self.redButton.setObjectName("redButton")
        self.yellowButton = QtWidgets.QRadioButton(self.centralwidget, clicked =lambda:self.select())
        self.yellowButton.setGeometry(QtCore.QRect(340, 160, 99, 20))
        self.yellowButton.setObjectName("yellowButton")
        self.greenButton = QtWidgets.QRadioButton(self.centralwidget, clicked = lambda: self.select())
        self.greenButton.setGeometry(QtCore.QRect(540, 160, 99, 20))
        self.greenButton.setObjectName("offButton")
        self.offButton = QtWidgets.QRadioButton(self.centralwidget, clicked =lambda:self.select())
        self.offButton.setGeometry(QtCore.QRect(340, 220, 99, 20))
        self.offButton.setObjectName("offButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuRGB_LED = QtWidgets.QMenu(self.menuBar)
        self.menuRGB_LED.setObjectName("menuRGB_LED")
        MainWindow.setMenuBar(self.menuBar)
        self.menuBar.addAction(self.menuRGB_LED.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def select(self):
        if self.redButton.isChecked():
            self.redOn()
        if self.yellowButton.isChecked():
            self.yellowOn()
        if self.greenButton.isChecked():
            self.greenOn()
        if self.offButton.isChecked():
            self.off()
            
    def redOn(self):
        GPIO.output(40, GPIO.HIGH)
        GPIO.output(38,GPIO.LOW)
        GPIO.output(36,GPIO.LOW)
        
    def yellowOn(self):
        GPIO.output(36, GPIO.HIGH)
        GPIO.output(38,GPIO.LOW)
        GPIO.output(40,GPIO.LOW)
        
    def greenOn(self):
        GPIO.output(38, GPIO.HIGH)
        GPIO.output(36,GPIO.LOW)
        GPIO.output(40,GPIO.LOW)
        
    def off(self):
        GPIO.output(36,GPIO.LOW)
        GPIO.output(38,GPIO.LOW)
        GPIO.output(40,GPIO.LOW)
        
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.redButton.setText(_translate("MainWindow", "RED"))
        self.yellowButton.setText(_translate("MainWindow", "YELLOW"))
        self.greenButton.setText(_translate("MainWindow", "GREEN"))
        self.offButton.setText(_translate("MainWindow", "ALL OFF"))
        self.menuRGB_LED.setTitle(_translate("MainWindow", "RGB LED"))
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())

